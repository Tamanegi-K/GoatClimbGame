//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/GoatControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GoatControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GoatControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GoatControls"",
    ""maps"": [
        {
            ""name"": ""Defaults"",
            ""id"": ""695437dc-2f08-436a-a3ad-72b74766b218"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f2cf0f87-c621-47b3-8203-2382de489372"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CaMovement"",
                    ""type"": ""Value"",
                    ""id"": ""25f7c974-86bc-4bef-8e0e-48b25d6543ce"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""f27bb272-502c-48e0-a57c-4ee7f70ac9cf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CamZoomer"",
                    ""type"": ""Button"",
                    ""id"": ""88900874-4d6d-4df3-b612-a7da9787b82b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""53ea0cb9-a5a1-436e-a51d-217a497b51ac"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""d5e47af7-d8c7-4818-8a54-d482e9119e96"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""2a319c92-4dfb-477f-b81c-994e499fe603"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""5c2962dd-3751-447c-acc3-4befc9a2bd38"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""1507c174-fd9d-465c-b186-b635c6287903"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1972541b-83cc-4e1d-9534-05c74b2abadb"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""CaMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""36d6c63a-6a85-4f65-8866-fc3bbbc6059d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""f397b44b-d15c-4644-8686-b258def2e367"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CamZoomer"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""31e5e9ae-9b74-4128-87ea-b48be34dce1f"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CamZoomer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""e1f272cd-af62-4540-95d2-a2752f060f72"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CamZoomer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KBM"",
            ""bindingGroup"": ""KBM"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Defaults
        m_Defaults = asset.FindActionMap("Defaults", throwIfNotFound: true);
        m_Defaults_Movement = m_Defaults.FindAction("Movement", throwIfNotFound: true);
        m_Defaults_CaMovement = m_Defaults.FindAction("CaMovement", throwIfNotFound: true);
        m_Defaults_Interaction = m_Defaults.FindAction("Interaction", throwIfNotFound: true);
        m_Defaults_CamZoomer = m_Defaults.FindAction("CamZoomer", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Defaults
    private readonly InputActionMap m_Defaults;
    private List<IDefaultsActions> m_DefaultsActionsCallbackInterfaces = new List<IDefaultsActions>();
    private readonly InputAction m_Defaults_Movement;
    private readonly InputAction m_Defaults_CaMovement;
    private readonly InputAction m_Defaults_Interaction;
    private readonly InputAction m_Defaults_CamZoomer;
    public struct DefaultsActions
    {
        private @GoatControls m_Wrapper;
        public DefaultsActions(@GoatControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Defaults_Movement;
        public InputAction @CaMovement => m_Wrapper.m_Defaults_CaMovement;
        public InputAction @Interaction => m_Wrapper.m_Defaults_Interaction;
        public InputAction @CamZoomer => m_Wrapper.m_Defaults_CamZoomer;
        public InputActionMap Get() { return m_Wrapper.m_Defaults; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DefaultsActions set) { return set.Get(); }
        public void AddCallbacks(IDefaultsActions instance)
        {
            if (instance == null || m_Wrapper.m_DefaultsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DefaultsActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @CaMovement.started += instance.OnCaMovement;
            @CaMovement.performed += instance.OnCaMovement;
            @CaMovement.canceled += instance.OnCaMovement;
            @Interaction.started += instance.OnInteraction;
            @Interaction.performed += instance.OnInteraction;
            @Interaction.canceled += instance.OnInteraction;
            @CamZoomer.started += instance.OnCamZoomer;
            @CamZoomer.performed += instance.OnCamZoomer;
            @CamZoomer.canceled += instance.OnCamZoomer;
        }

        private void UnregisterCallbacks(IDefaultsActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @CaMovement.started -= instance.OnCaMovement;
            @CaMovement.performed -= instance.OnCaMovement;
            @CaMovement.canceled -= instance.OnCaMovement;
            @Interaction.started -= instance.OnInteraction;
            @Interaction.performed -= instance.OnInteraction;
            @Interaction.canceled -= instance.OnInteraction;
            @CamZoomer.started -= instance.OnCamZoomer;
            @CamZoomer.performed -= instance.OnCamZoomer;
            @CamZoomer.canceled -= instance.OnCamZoomer;
        }

        public void RemoveCallbacks(IDefaultsActions instance)
        {
            if (m_Wrapper.m_DefaultsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDefaultsActions instance)
        {
            foreach (var item in m_Wrapper.m_DefaultsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DefaultsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DefaultsActions @Defaults => new DefaultsActions(this);
    private int m_KBMSchemeIndex = -1;
    public InputControlScheme KBMScheme
    {
        get
        {
            if (m_KBMSchemeIndex == -1) m_KBMSchemeIndex = asset.FindControlSchemeIndex("KBM");
            return asset.controlSchemes[m_KBMSchemeIndex];
        }
    }
    public interface IDefaultsActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnCaMovement(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnCamZoomer(InputAction.CallbackContext context);
    }
}
